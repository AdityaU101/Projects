create database Loan_System;
use Loan_System;

create table Bank (
    Code int primary key,
    Name varchar(32),
    Addr varchar(32),
    Estd_Date Date
);

create table Branch (
    Id int primary key,
    Name varchar(32),
    Location varchar(32),
    Code int,
    foreign key(Code) references Bank(Code) on delete cascade
);

create table Customer (
    Id int primary key,
    Name varchar(32),
    Addr varchar(32),
    Email varchar(32),
    Ph_No varchar(10)
);

create table Loan (
    Id int primary key,
    Amount int,
    Term int,
    Interest_rate int,
    Issue_date Date,
    Branch_id int,
    foreign key(Branch_id) references Branch(Id) on delete cascade
);

create table Loan_Customer_Mapping (
    Customer_id int,
    Loan_id int,
    Status varchar(16),
    Amount_repaid int,
    primary key(Customer_id, Loan_id),
    foreign key(Customer_id) references Customer(Id) on delete cascade,
    foreign key(Loan_Id) references Loan(Id) on delete cascade
);

create table Payment (
    Id int primary key,
    Amount int,
    Date Date,
    Method varchar(16),
    Loan_id int,
    foreign key(Loan_id) references Loan(id) on delete cascade
);

create table Loan_Officer (
    Id int primary key,
    Name varchar(32),
    Email varchar(32),
    Phone_number varchar(10),
    Branch_id int,
    foreign key(Branch_id) references Branch(Id) on delete cascade
);

CREATE TRIGGER update_loan_status
BEFORE UPDATE ON Loan
FOR EACH ROW
BEGIN
    DECLARE total_to_be_paid DECIMAL(10, 2);
    SET total_to_be_paid = NEW.Loan_Amount * (1 + (NEW.Interest_Rate / 100) * (NEW.Loan_Duration / 12));
    IF NEW.Amount_Repaid = total_to_be_paid THEN
        SET NEW.Approval_Status = 'Paid';
    END IF;
END;


